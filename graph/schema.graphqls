scalar Timestamp
scalar Decimal

type Loan {
  id: ID!
  properties: [Property!]!
  valuation: Decimal!
  principal: Decimal!
  interest: Decimal!
  ltv: Decimal!

  createdAt: Timestamp!
  updatedAt: Timestamp!
}

type Property {
  id: ID!
  address1: String!
  address2: String!
  city: String!
  state: String!
  zip: String!

  loans: [Loan!]!

  createdAt: Timestamp!
  updatedAt: Timestamp!
}

type Query {
  getLoans: [Loan!]!
}

type Mutation {
  addLoan(request: LoanRequest!) : LoanResponse!
  removeLoan(loanId: ID!) : LoanResponse!
  updateLoan(loanId: ID!, request: LoanRequest!) : LoanResponse!
}

interface MutationResponse {
  errors: [String!]
}

type LoanResponse implements MutationResponse {
  errors: [String!]
  loan: Loan
}

input LoanRequest {
  addresses: [Address!]!
  valuation: Decimal!
  principal: Decimal!
  interest: Decimal!
}

input Address {
  address1: String!
  address2: String!
  city: String!
  state: String!
  zip: String!
}
